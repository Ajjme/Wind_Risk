Script starting...
Thu Aug 29 06:49:47 AM EDT 2024: Waiting for Code Server to open port 57472...
Thu Aug 29 06:49:48 AM EDT 2024: Running on compute node :57472
code-server 4.90.2
Thu Aug 29 06:49:48 AM EDT 2024: Started code-server

[2024-08-29T10:49:57.629Z] debug parent:2816603 spawned child process 2816956
[2024-08-29T10:49:58.189Z] debug child:2816956 initiating handshake
[2024-08-29T10:49:58.192Z] debug parent:2816603 got message [38;2;140;140;140m{"message":{"type":"handshake"}}[0m
[2024-08-29T10:49:58.219Z] debug child:2816956 got message [38;2;140;140;140m{"message":{"type":"handshake","args":{"bind-addr":"0.0.0.0:57472","auth":"none","password":"<redacted>","config":"/hpc/home/ajj54/.config/code-server/config.yaml","disable-telemetry":true,"extensions-dir":"/hpc/home/ajj54/.local/share/code-server/extensions","user-data-dir":"/hpc/home/ajj54/.local/share/code-server","log":"debug","_":["/hpc/home/ajj54"],"session-socket":"/hpc/home/ajj54/.local/share/code-server/code-server-ipc.sock","verbose":false,"host":"0.0.0.0","port":57472,"proxy-domain":[],"usingEnvPassword":true,"usingEnvHashedPassword":false}}}[0m
[2024-08-29T10:49:58.219Z] info  code-server 4.90.2 dce1d6e172cc5f935b9732e7dee4b7a992529eda
[2024-08-29T10:49:58.220Z] info  Using user-data-dir /hpc/home/ajj54/.local/share/code-server
[2024-08-29T10:49:58.220Z] debug Using extensions-dir /hpc/home/ajj54/.local/share/code-server/extensions
[2024-08-29T10:49:58.355Z] info  Using config file /hpc/home/ajj54/.config/code-server/config.yaml
[2024-08-29T10:49:58.355Z] info  HTTP server listening on http://0.0.0.0:57472/
[2024-08-29T10:49:58.355Z] info    - Authentication is disabled
[2024-08-29T10:49:58.355Z] info    - Not serving HTTPS
[2024-08-29T10:49:58.356Z] info  Session server listening on /hpc/home/ajj54/.local/share/code-server/code-server-ipc.sock
Thu Aug 29 06:49:58 AM EDT 2024: Discovered code-server listening on port 57472!
Generating connection YAML file...
[2024-08-29T10:50:31.153Z] debug heartbeat
[06:50:32] 




[06:50:33] Extension host agent started.
[06:50:33] No uninstalled extensions found.
[2024-08-29T10:50:33.973Z] debug redirecting from /? to ./?folder=/hpc/home/ajj54
File not found: /admin/apps/rhel9/code-server-4.90.2/lib/vscode/out/vsda_bg.wasm
File not found: /admin/apps/rhel9/code-server-4.90.2/lib/vscode/out/vsda.js
[06:50:36] [10.183.18.196][4b31cb63][ManagementConnection] New connection established.
[2024-08-29T10:50:36.829Z] debug Making request [38;2;140;140;140m{"uri":"https://api.github.com/repos/coder/code-server/releases/latest"}[0m
[06:50:37] Error while reading the extension cache file: /hpc/home/ajj54/.local/share/code-server/CachedProfilesData/__default__profile__/extensions.user.cache Unable to read file '/hpc/home/ajj54/.local/share/code-server/CachedProfilesData/__default__profile__/extensions.user.cache' (Error: Unable to resolve nonexistent file '/hpc/home/ajj54/.local/share/code-server/CachedProfilesData/__default__profile__/extensions.user.cache')
[06:50:37] Using cached extensions scan result file:///admin/apps/rhel9/code-server-4.90.2/lib/vscode/extensions
[06:50:37] ComputeTargetPlatform: linux-x64
[2024-08-29T10:50:37.536Z] debug got latest version [38;2;140;140;140m{"latest":"4.92.2"}[0m
[2024-08-29T10:50:37.536Z] debug comparing versions [38;2;140;140;140m{"current":"4.90.2","latest":"4.92.2"}[0m
[06:50:37] [10.183.18.196][d0c64529][ExtensionHostConnection] New connection established.
[06:50:39] [10.183.18.196][d0c64529][ExtensionHostConnection] <2818261> Launched Extension Host Process.
[06:50:39] Terminal profile not validated fish [ 'fish' ]
[06:50:39] Terminal profile not validated pwsh [ 'pwsh' ]
[06:50:39] ComputeTargetPlatform: linux-x64
[2024-08-29T10:50:42.022Z] debug Adding session to session registry: /tmp/vscode-ipc-988bd95e-767f-4458-b816-d61a64abdfd7.sock
[06:50:44] Terminal profile not validated fish [ 'fish' ]
[06:50:44] Terminal profile not validated pwsh [ 'pwsh' ]
[06:50:44] Terminal process launching on remote agent {
  shellLaunchConfig: {
    name: undefined,
    executable: '/bin/bash',
    args: undefined,
    cwd: '/hpc/home/ajj54',
    env: undefined,
    useShellEnvironment: true,
    reconnectionProperties: undefined,
    type: undefined,
    isFeatureTerminal: undefined
  },
  initialCwd: '/hpc/home/ajj54',
  cols: 80,
  rows: 30,
  env: {
    SHELL: '/bin/bash',
    SLURM_JOB_USER: 'ajj54',
    SLURM_TASKS_PER_NODE: '1',
    SLURM_JOB_UID: '1546375',
    HISTCONTROL: 'ignoreboth',
    SLURM_EXPORT_ENV: 'NONE',
    SLURM_TASK_PID: '2816504',
    CONDA_EXE: '/hpc/group/borsuklab/ajj54/miniconda3/bin/conda',
    _CE_M: '',
    __MODULES_LMALTNAME: 'code-server/4.90.2&as|code-server/default&as|code-server/latest',
    SLURM_LOCALID: '0',
    SLURM_SUBMIT_DIR: '/var/www/ood/apps/sys/dashboard',
    HOSTNAME: 'dcc-core-08',
    HISTSIZE: '1000',
    SLURMD_NODENAME: 'dcc-core-08',
    SLURM_JOB_START_TIME: '1724928578',
    HYDRA_LAUNCHER_EXTRA_ARGS: '--external-launcher',
    SLURM_CLUSTER_NAME: 'dcc',
    SLURM_JOB_END_TIME: '1724932178',
    SLURM_CPUS_ON_NODE: '2',
    SLURM_JOB_CPUS_PER_NODE: '2',
    SACCT_FORMAT: 'user%8,JobID%16,state%12,partition%15,start,elapsed%10,nodelist%20,MaxRss%10,ReqMem%6,NCPUS%4,ExitCode,Workdir%110',
    PRTE_MCA_plm_slurm_args: '--external-launcher',
    PWD: '/hpc/home/ajj54/ondemand/data/sys/dashboard/batch_connect/sys/bc_codeserver/output/5febb683-3602-4f6c-87c4-892a8d4b2534',
    SLURM_GTIDS: '0',
    LOGNAME: 'ajj54',
    CONDA_PREFIX: '/hpc/group/borsuklab/ajj54/miniconda3',
    SLURM_JOB_PARTITION: 'common',
    MODULESHOME: '/usr/share/Modules',
    MANPATH: ':/opt/puppetlabs/puppet/share/man',
    SLURM_TRES_PER_TASK: 'cpu=2',
    SLURM_JOB_NUM_NODES: '1',
    SLURM_JOBID: '15179672',
    SLURM_JOB_QOS: 'normal',
    I_MPI_HYDRA_BOOTSTRAP_EXEC_EXTRA_ARGS: '--external-launcher',
    HOME: '/hpc/home/ajj54',
    SSH_ASKPASS: '/usr/libexec/openssh/gnome-ssh-askpass',
    LANG: 'en_US.UTF-8',
    port: '57472',
    SLURM_PROCID: '0',
    __MODULES_LMCONFLICT: 'code-server/4.90.2&CODE-SERVER',
    CONDA_PROMPT_MODIFIER: '(base) ',
    TMPDIR: '/tmp',
    SLURM_CPUS_PER_TASK: '2',
    SLURM_NTASKS: '1',
    SLURM_TOPOLOGY_ADDR: 'dcc-core-08',
    HYDRA_BOOTSTRAP: 'slurm',
    SLURM_TOPOLOGY_ADDR_PATTERN: 'node',
    SLURM_MEM_PER_NODE: '2048',
    _CE_CONDA: '',
    LESSOPEN: '||/usr/bin/lesspipe.sh %s',
    USER: 'ajj54',
    SLURM_NODELIST: 'dcc-core-08',
    ENVIRONMENT: 'BATCH',
    CONDA_SHLVL: '1',
    MODULES_RUN_QUARANTINE: 'LD_LIBRARY_PATH LD_PRELOAD',
    LOADEDMODULES: 'code-server/4.90.2',
    SLURM_JOB_ACCOUNT: 'borsuklab',
    SLURM_PRIO_PROCESS: '0',
    SLURM_NPROCS: '1',
    SHLVL: '2',
    SLURM_NNODES: '1',
    SLURM_SUBMIT_HOST: 'dcc-ondemand-01',
    CONDA_PYTHON_EXE: '/hpc/group/borsuklab/ajj54/miniconda3/bin/python',
    SLURM_JOB_ID: '15179672',
    password: 'pWdjN5QHsquGTPtb',
    SLURM_NODEID: '0',
    S_COLORS: 'auto',
    CONDA_DEFAULT_ENV: 'base',
    DEBUGINFOD_URLS: 'https://debuginfod.centos.org/ ',
    which_declare: 'declare -f',
    host: 'dcc-core-08',
    XDG_DATA_DIRS: '/hpc/home/ajj54/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share',
    SLURM_CONF: '/var/spool/slurmd/conf-cache/slurm.conf',
    PATH: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/bin/remote-cli:/opt/apps/rhel9/code-server-4.90.2/bin:/hpc/group/borsuklab/ajj54/miniconda3/bin:/hpc/group/borsuklab/ajj54/miniconda3/condabin:/hpc/home/ajj54/.local/bin:/hpc/home/ajj54/bin:/usr/share/Modules/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/puppetlabs/bin:/opt/slurm/bin',
    SLURM_JOB_NAME: 'sys/dashboard/sys/bc_codeserver',
    MODULEPATH: '/opt/apps/modulefiles',
    _LMFILES_: '/opt/apps/modulefiles/code-server/4.90.2',
    MAIL: '/var/spool/mail/ajj54',
    OMPI_MCA_plm_slurm_args: '--external-launcher',
    SLURM_JOB_GID: '1000000',
    SLURM_GET_USER_ENV: '1',
    OLDPWD: '/hpc/home/ajj54/ondemand/data/sys/dashboard/batch_connect/sys/bc_codeserver/output/5febb683-3602-4f6c-87c4-892a8d4b2534',
    SLURM_JOB_NODELIST: 'dcc-core-08',
    MODULES_CMD: '/usr/share/Modules/libexec/modulecmd.tcl',
    I_MPI_HYDRA_BOOTSTRAP: 'slurm',
    'BASH_FUNC_ml%%': '() {  module ml "$@"\n}',
    'BASH_FUNC_find_port%%': '() {  local host="${1:-localhost}";\n' +
      ' local min_port=${2:-2000};\n' +
      ' local max_port=${3:-65535};\n' +
      ' local port_range=($(shuf -i ${min_port}-${max_port}));\n' +
      ' local retries=1;\n' +
      ' for ((attempt=0; attempt<=$retries; attempt++))\n' +
      ' do\n' +
      ' for port in "${port_range[@]}";\n' +
      ' do\n' +
      ' if port_used "${host}:${port}"; then\n' +
      ' continue;\n' +
      ' fi;\n' +
      ' echo "${port}";\n' +
      ' return 0;\n' +
      ' done;\n' +
      ' done;\n' +
      ' echo "error: failed to find available port in range ${min_port}..${max_port}" 1>&2;\n' +
      ' return 1\n' +
      '}',
    'BASH_FUNC_which%%': '() {  ( alias;\n' +
      ' eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\n' +
      '}',
    'BASH_FUNC_create_passwd%%': "() {  tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\n}",
    'BASH_FUNC_random_number%%': '() {  shuf -i ${1}-${2} -n 1\n}',
    'BASH_FUNC_module%%': '() {  local _mlredir=0;\n' +
      ' if [ -n "${MODULES_REDIRECT_OUTPUT+x}" ]; then\n' +
      ` if [ "$MODULES_REDIRECT_OUTPUT" = '0' ]; then\n` +
      ' _mlredir=0;\n' +
      ' else\n' +
      ` if [ "$MODULES_REDIRECT_OUTPUT" = '1' ]; then\n` +
      ' _mlredir=1;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' case " $@ " in \n' +
      " *' --no-redirect '*)\n" +
      ' _mlredir=0\n' +
      ' ;;\n' +
      " *' --redirect '*)\n" +
      ' _mlredir=1\n' +
      ' ;;\n' +
      ' esac;\n' +
      ' if [ $_mlredir -eq 0 ]; then\n' +
      ' _module_raw "$@";\n' +
      ' else\n' +
      ' _module_raw "$@" 2>&1;\n' +
      ' fi\n' +
      '}',
    'BASH_FUNC_wait_until_port_used%%': '() {  local port="${1}";\n' +
      ' local time="${2:-30}";\n' +
      ' for ((i=1; i<=time*2; i++))\n' +
      ' do\n' +
      ' port_used "${port}";\n' +
      ' port_status=$?;\n' +
      ' if [ "$port_status" == "0" ]; then\n' +
      ' return 0;\n' +
      ' else\n' +
      ' if [ "$port_status" == "127" ]; then\n' +
      ' echo "commands to find port were either not found or inaccessible.";\n' +
      ` echo "command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.";\n` +
      ' return 127;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' sleep 0.5;\n' +
      ' done;\n' +
      ' return 1\n' +
      '}',
    'BASH_FUNC__module_raw%%': `() {  eval "$(/usr/bin/tclsh '/usr/share/Modules/libexec/modulecmd.tcl' bash "$@")";\n` +
      ' _mlstatus=$?;\n' +
      ' return $_mlstatus\n' +
      '}',
    'BASH_FUNC_port_used%%': '() {  local port="${1#*:}";\n' +
      ' local host=$((expr "${1}" : \'\\(.*\\):\' || echo "localhost") | awk \'END{print $NF}\');\n' +
      ' local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n' +
      ' for strategy in ${port_strategies[@]};\n' +
      ' do\n' +
      ' $strategy $host $port;\n' +
      ' status=$?;\n' +
      ' if [[ "$status" == "0" ]] || [[ "$status" == "1" ]]; then\n' +
      ' return $status;\n' +
      ' fi;\n' +
      ' done;\n' +
      ' return 127\n' +
      '}',
    'BASH_FUNC_source_helpers%%': '() {  function random_number () \n' +
      ' { \n' +
      ' shuf -i ${1}-${2} -n 1\n' +
      ' };\n' +
      ' export -f random_number;\n' +
      ' function port_used_python () \n' +
      ' { \n' +
      ` python -c "import socket; socket.socket().connect(('$1',$2))" > /dev/null 2>&1\n` +
      ' };\n' +
      ' function port_used_python3 () \n' +
      ' { \n' +
      ` python3 -c "import socket; socket.socket().connect(('$1',$2))" > /dev/null 2>&1\n` +
      ' };\n' +
      ' function port_used_nc () \n' +
      ' { \n' +
      ' nc -w 2 "$1" "$2" < /dev/null > /dev/null 2>&1\n' +
      ' };\n' +
      ' function port_used_lsof () \n' +
      ' { \n' +
      ' lsof -i :"$2" > /dev/null 2>&1\n' +
      ' };\n' +
      ' function port_used_bash () \n' +
      ' { \n' +
      ' local bash_supported=$(strings /bin/bash 2>/dev/null | grep tcp);\n' +
      ' if [ "$bash_supported" == "/dev/tcp/*/*" ]; then\n' +
      ' ( : < /dev/tcp/$1/$2 ) > /dev/null 2>&1;\n' +
      ' else\n' +
      ' return 127;\n' +
      ' fi\n' +
      ' };\n' +
      ' function port_used () \n' +
      ' { \n' +
      ' local port="${1#*:}";\n' +
      ' local host=$((expr "${1}" : \'\\(.*\\):\' || echo "localhost") | awk \'END{print $NF}\');\n' +
      ' local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n' +
      ' for strategy in ${port_strategies[@]};\n' +
      ' do\n' +
      ' $strategy $host $port;\n' +
      ' status=$?;\n' +
      ' if [[ "$status" == "0" ]] || [[ "$status" == "1" ]]; then\n' +
      ' return $status;\n' +
      ' fi;\n' +
      ' done;\n' +
      ' return 127\n' +
      ' };\n' +
      ' export -f port_used;\n' +
      ' function find_port () \n' +
      ' { \n' +
      ' local host="${1:-localhost}";\n' +
      ' local min_port=${2:-2000};\n' +
      ' local max_port=${3:-65535};\n' +
      ' local port_range=($(shuf -i ${min_port}-${max_port}));\n' +
      ' local retries=1;\n' +
      ' for ((attempt=0; attempt<=$retries; attempt++))\n' +
      ' do\n' +
      ' for port in "${port_range[@]}";\n' +
      ' do\n' +
      ' if port_used "${host}:${port}"; then\n' +
      ' continue;\n' +
      ' fi;\n' +
      ' echo "${port}";\n' +
      ' return 0;\n' +
      ' done;\n' +
      ' done;\n' +
      ' echo "error: failed to find available port in range ${min_port}..${max_port}" 1>&2;\n' +
      ' return 1\n' +
      ' };\n' +
      ' export -f find_port;\n' +
      ' function wait_until_port_used () \n' +
      ' { \n' +
      ' local port="${1}";\n' +
      ' local time="${2:-30}";\n' +
      ' for ((i=1; i<=time*2; i++))\n' +
      ' do\n' +
      ' port_used "${port}";\n' +
      ' port_status=$?;\n' +
      ' if [ "$port_status" == "0" ]; then\n' +
      ' return 0;\n' +
      ' else\n' +
      ' if [ "$port_status" == "127" ]; then\n' +
      ' echo "commands to find port were either not found or inaccessible.";\n' +
      ` echo "command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.";\n` +
      ' return 127;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' sleep 0.5;\n' +
      ' done;\n' +
      ' return 1\n' +
      ' };\n' +
      ' export -f wait_until_port_used;\n' +
      ' function create_passwd () \n' +
      ' { \n' +
      " tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\n" +
      ' };\n' +
      ' export -f create_passwd\n' +
      '}',
    LOG_LEVEL: 'debug',
    NODE_EXEC_PATH: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    FAMILY: 'almalinux',
    LS_COLORS: '',
    SSI_VERSION: '9.4',
    PS1: '(base) \\[\\e[32m\\]\\u@\\h  \\[\\e[34;1m\\]\\w $\\[\\e[0m\\] ',
    _: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    VSCODE_PROXY_URI: 'https://dcc-ondemand-01.oit.duke.edu/rnode/dcc-core-08/57472/proxy/{{port}}/',
    BROWSER: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/bin/helpers/browser.sh',
    TERM_PROGRAM: 'vscode',
    TERM_PROGRAM_VERSION: '1.90.1',
    COLORTERM: 'truecolor',
    GIT_ASKPASS: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/extensions/git/dist/askpass.sh',
    VSCODE_GIT_ASKPASS_NODE: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    VSCODE_GIT_ASKPASS_EXTRA_ARGS: '',
    VSCODE_GIT_ASKPASS_MAIN: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/extensions/git/dist/askpass-main.js',
    VSCODE_GIT_IPC_HANDLE: '/tmp/vscode-git-0892b29a11.sock'
  }
}
[2024-08-29T10:51:31.157Z] debug 2 active connections
[2024-08-29T10:51:31.158Z] debug heartbeat
[2024-08-29T10:52:31.160Z] debug 2 active connections
[2024-08-29T10:52:31.160Z] debug heartbeat
[2024-08-29T10:53:31.160Z] debug 2 active connections
[2024-08-29T10:53:31.160Z] debug heartbeat
[2024-08-29T10:54:31.162Z] debug 2 active connections
[2024-08-29T10:54:31.162Z] debug heartbeat
[2024-08-29T10:55:31.163Z] debug 2 active connections
[2024-08-29T10:55:31.163Z] debug heartbeat
[2024-08-29T10:56:31.166Z] debug 2 active connections
[2024-08-29T10:56:31.166Z] debug heartbeat
[2024-08-29T10:57:31.167Z] debug 2 active connections
[2024-08-29T10:57:31.167Z] debug heartbeat
[2024-08-29T10:58:31.174Z] debug 2 active connections
[2024-08-29T10:58:31.174Z] debug heartbeat
[2024-08-29T10:59:31.176Z] debug 2 active connections
[2024-08-29T10:59:31.177Z] debug heartbeat
[2024-08-29T11:00:31.178Z] debug 2 active connections
[2024-08-29T11:00:31.179Z] debug heartbeat
[2024-08-29T11:01:31.180Z] debug 2 active connections
[2024-08-29T11:01:31.180Z] debug heartbeat
[2024-08-29T11:02:31.180Z] debug 2 active connections
[2024-08-29T11:02:31.180Z] debug heartbeat
[2024-08-29T11:03:31.181Z] debug 2 active connections
[2024-08-29T11:03:31.182Z] debug heartbeat
[2024-08-29T11:04:31.182Z] debug 2 active connections
[2024-08-29T11:04:31.182Z] debug heartbeat
[2024-08-29T11:05:31.184Z] debug 2 active connections
[2024-08-29T11:05:31.184Z] debug heartbeat
[2024-08-29T11:06:31.185Z] debug 2 active connections
[2024-08-29T11:06:31.185Z] debug heartbeat
[2024-08-29T11:07:31.185Z] debug 2 active connections
[2024-08-29T11:07:31.185Z] debug heartbeat
[2024-08-29T11:08:31.186Z] debug 2 active connections
[2024-08-29T11:08:31.186Z] debug heartbeat
[2024-08-29T11:09:31.187Z] debug 2 active connections
[2024-08-29T11:09:31.187Z] debug heartbeat
[2024-08-29T11:10:31.190Z] debug 2 active connections
[2024-08-29T11:10:31.190Z] debug heartbeat
[2024-08-29T11:11:31.191Z] debug 2 active connections
[2024-08-29T11:11:31.191Z] debug heartbeat
[2024-08-29T11:12:31.191Z] debug 2 active connections
[2024-08-29T11:12:31.191Z] debug heartbeat
[2024-08-29T11:13:31.192Z] debug 2 active connections
[2024-08-29T11:13:31.192Z] debug heartbeat
[2024-08-29T11:14:31.194Z] debug 2 active connections
[2024-08-29T11:14:31.194Z] debug heartbeat
[2024-08-29T11:15:31.196Z] debug 2 active connections
[2024-08-29T11:15:31.196Z] debug heartbeat
[2024-08-29T11:16:31.196Z] debug 2 active connections
[2024-08-29T11:16:31.197Z] debug heartbeat
[2024-08-29T11:17:31.197Z] debug 2 active connections
[2024-08-29T11:17:31.198Z] debug heartbeat
[2024-08-29T11:18:31.198Z] debug 2 active connections
[2024-08-29T11:18:31.198Z] debug heartbeat
[2024-08-29T11:19:31.200Z] debug 2 active connections
[2024-08-29T11:19:31.201Z] debug heartbeat
[2024-08-29T11:20:31.203Z] debug 2 active connections
[2024-08-29T11:20:31.203Z] debug heartbeat
[2024-08-29T11:21:31.203Z] debug 2 active connections
[2024-08-29T11:21:31.204Z] debug heartbeat
[2024-08-29T11:22:31.205Z] debug 2 active connections
[2024-08-29T11:22:31.205Z] debug heartbeat
[2024-08-29T11:23:31.209Z] debug 2 active connections
[2024-08-29T11:23:31.210Z] debug heartbeat
[2024-08-29T11:24:31.211Z] debug 2 active connections
[2024-08-29T11:24:31.211Z] debug heartbeat
[2024-08-29T11:25:31.211Z] debug 2 active connections
[07:29:32] Terminal profile not validated fish [ 'fish' ]
[07:29:32] Terminal profile not validated pwsh [ 'pwsh' ]
[2024-08-29T11:29:33.300Z] debug heartbeat
[07:29:33] Terminal process launching on remote agent {
  shellLaunchConfig: {
    name: 'Python',
    executable: '/bin/bash',
    args: [],
    cwd: '/hpc/home/ajj54',
    env: {
      PYTHONSTARTUP: '/hpc/home/ajj54/.local/share/code-server/extensions/ms-python.python-2024.12.3-universal/python_files/pythonrc.py'
    },
    useShellEnvironment: true,
    reconnectionProperties: undefined,
    type: undefined,
    isFeatureTerminal: undefined
  },
  initialCwd: '/hpc/home/ajj54',
  cols: 198,
  rows: 15,
  env: {
    SHELL: '/bin/bash',
    SLURM_JOB_USER: 'ajj54',
    SLURM_TASKS_PER_NODE: '1',
    SLURM_JOB_UID: '1546375',
    HISTCONTROL: 'ignoreboth',
    SLURM_EXPORT_ENV: 'NONE',
    SLURM_TASK_PID: '2816504',
    CONDA_EXE: '/hpc/group/borsuklab/ajj54/miniconda3/bin/conda',
    _CE_M: '',
    __MODULES_LMALTNAME: 'code-server/4.90.2&as|code-server/default&as|code-server/latest',
    SLURM_LOCALID: '0',
    SLURM_SUBMIT_DIR: '/var/www/ood/apps/sys/dashboard',
    HOSTNAME: 'dcc-core-08',
    HISTSIZE: '1000',
    SLURMD_NODENAME: 'dcc-core-08',
    SLURM_JOB_START_TIME: '1724928578',
    HYDRA_LAUNCHER_EXTRA_ARGS: '--external-launcher',
    SLURM_CLUSTER_NAME: 'dcc',
    SLURM_JOB_END_TIME: '1724932178',
    SLURM_CPUS_ON_NODE: '2',
    SLURM_JOB_CPUS_PER_NODE: '2',
    SACCT_FORMAT: 'user%8,JobID%16,state%12,partition%15,start,elapsed%10,nodelist%20,MaxRss%10,ReqMem%6,NCPUS%4,ExitCode,Workdir%110',
    PRTE_MCA_plm_slurm_args: '--external-launcher',
    PWD: '/hpc/home/ajj54/ondemand/data/sys/dashboard/batch_connect/sys/bc_codeserver/output/5febb683-3602-4f6c-87c4-892a8d4b2534',
    SLURM_GTIDS: '0',
    LOGNAME: 'ajj54',
    CONDA_PREFIX: '/hpc/group/borsuklab/ajj54/miniconda3',
    SLURM_JOB_PARTITION: 'common',
    MODULESHOME: '/usr/share/Modules',
    MANPATH: ':/opt/puppetlabs/puppet/share/man',
    SLURM_TRES_PER_TASK: 'cpu=2',
    SLURM_JOB_NUM_NODES: '1',
    SLURM_JOBID: '15179672',
    SLURM_JOB_QOS: 'normal',
    I_MPI_HYDRA_BOOTSTRAP_EXEC_EXTRA_ARGS: '--external-launcher',
    HOME: '/hpc/home/ajj54',
    SSH_ASKPASS: '/usr/libexec/openssh/gnome-ssh-askpass',
    LANG: 'en_US.UTF-8',
    port: '57472',
    SLURM_PROCID: '0',
    __MODULES_LMCONFLICT: 'code-server/4.90.2&CODE-SERVER',
    CONDA_PROMPT_MODIFIER: '(base) ',
    TMPDIR: '/tmp',
    SLURM_CPUS_PER_TASK: '2',
    SLURM_NTASKS: '1',
    SLURM_TOPOLOGY_ADDR: 'dcc-core-08',
    HYDRA_BOOTSTRAP: 'slurm',
    SLURM_TOPOLOGY_ADDR_PATTERN: 'node',
    SLURM_MEM_PER_NODE: '2048',
    _CE_CONDA: '',
    LESSOPEN: '||/usr/bin/lesspipe.sh %s',
    USER: 'ajj54',
    SLURM_NODELIST: 'dcc-core-08',
    ENVIRONMENT: 'BATCH',
    CONDA_SHLVL: '1',
    MODULES_RUN_QUARANTINE: 'LD_LIBRARY_PATH LD_PRELOAD',
    LOADEDMODULES: 'code-server/4.90.2',
    SLURM_JOB_ACCOUNT: 'borsuklab',
    SLURM_PRIO_PROCESS: '0',
    SLURM_NPROCS: '1',
    SHLVL: '2',
    SLURM_NNODES: '1',
    SLURM_SUBMIT_HOST: 'dcc-ondemand-01',
    CONDA_PYTHON_EXE: '/hpc/group/borsuklab/ajj54/miniconda3/bin/python',
    SLURM_JOB_ID: '15179672',
    password: 'pWdjN5QHsquGTPtb',
    SLURM_NODEID: '0',
    S_COLORS: 'auto',
    CONDA_DEFAULT_ENV: 'base',
    DEBUGINFOD_URLS: 'https://debuginfod.centos.org/ ',
    which_declare: 'declare -f',
    host: 'dcc-core-08',
    XDG_DATA_DIRS: '/hpc/home/ajj54/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share',
    SLURM_CONF: '/var/spool/slurmd/conf-cache/slurm.conf',
    PATH: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/bin/remote-cli:/opt/apps/rhel9/code-server-4.90.2/bin:/hpc/group/borsuklab/ajj54/miniconda3/bin:/hpc/group/borsuklab/ajj54/miniconda3/condabin:/hpc/home/ajj54/.local/bin:/hpc/home/ajj54/bin:/usr/share/Modules/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/puppetlabs/bin:/opt/slurm/bin',
    SLURM_JOB_NAME: 'sys/dashboard/sys/bc_codeserver',
    MODULEPATH: '/opt/apps/modulefiles',
    _LMFILES_: '/opt/apps/modulefiles/code-server/4.90.2',
    MAIL: '/var/spool/mail/ajj54',
    OMPI_MCA_plm_slurm_args: '--external-launcher',
    SLURM_JOB_GID: '1000000',
    SLURM_GET_USER_ENV: '1',
    OLDPWD: '/hpc/home/ajj54/ondemand/data/sys/dashboard/batch_connect/sys/bc_codeserver/output/5febb683-3602-4f6c-87c4-892a8d4b2534',
    SLURM_JOB_NODELIST: 'dcc-core-08',
    MODULES_CMD: '/usr/share/Modules/libexec/modulecmd.tcl',
    I_MPI_HYDRA_BOOTSTRAP: 'slurm',
    'BASH_FUNC_ml%%': '() {  module ml "$@"\n}',
    'BASH_FUNC_find_port%%': '() {  local host="${1:-localhost}";\n' +
      ' local min_port=${2:-2000};\n' +
      ' local max_port=${3:-65535};\n' +
      ' local port_range=($(shuf -i ${min_port}-${max_port}));\n' +
      ' local retries=1;\n' +
      ' for ((attempt=0; attempt<=$retries; attempt++))\n' +
      ' do\n' +
      ' for port in "${port_range[@]}";\n' +
      ' do\n' +
      ' if port_used "${host}:${port}"; then\n' +
      ' continue;\n' +
      ' fi;\n' +
      ' echo "${port}";\n' +
      ' return 0;\n' +
      ' done;\n' +
      ' done;\n' +
      ' echo "error: failed to find available port in range ${min_port}..${max_port}" 1>&2;\n' +
      ' return 1\n' +
      '}',
    'BASH_FUNC_which%%': '() {  ( alias;\n' +
      ' eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\n' +
      '}',
    'BASH_FUNC_create_passwd%%': "() {  tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\n}",
    'BASH_FUNC_random_number%%': '() {  shuf -i ${1}-${2} -n 1\n}',
    'BASH_FUNC_module%%': '() {  local _mlredir=0;\n' +
      ' if [ -n "${MODULES_REDIRECT_OUTPUT+x}" ]; then\n' +
      ` if [ "$MODULES_REDIRECT_OUTPUT" = '0' ]; then\n` +
      ' _mlredir=0;\n' +
      ' else\n' +
      ` if [ "$MODULES_REDIRECT_OUTPUT" = '1' ]; then\n` +
      ' _mlredir=1;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' case " $@ " in \n' +
      " *' --no-redirect '*)\n" +
      ' _mlredir=0\n' +
      ' ;;\n' +
      " *' --redirect '*)\n" +
      ' _mlredir=1\n' +
      ' ;;\n' +
      ' esac;\n' +
      ' if [ $_mlredir -eq 0 ]; then\n' +
      ' _module_raw "$@";\n' +
      ' else\n' +
      ' _module_raw "$@" 2>&1;\n' +
      ' fi\n' +
      '}',
    'BASH_FUNC_wait_until_port_used%%': '() {  local port="${1}";\n' +
      ' local time="${2:-30}";\n' +
      ' for ((i=1; i<=time*2; i++))\n' +
      ' do\n' +
      ' port_used "${port}";\n' +
      ' port_status=$?;\n' +
      ' if [ "$port_status" == "0" ]; then\n' +
      ' return 0;\n' +
      ' else\n' +
      ' if [ "$port_status" == "127" ]; then\n' +
      ' echo "commands to find port were either not found or inaccessible.";\n' +
      ` echo "command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.";\n` +
      ' return 127;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' sleep 0.5;\n' +
      ' done;\n' +
      ' return 1\n' +
      '}',
    'BASH_FUNC__module_raw%%': `() {  eval "$(/usr/bin/tclsh '/usr/share/Modules/libexec/modulecmd.tcl' bash "$@")";\n` +
      ' _mlstatus=$?;\n' +
      ' return $_mlstatus\n' +
      '}',
    'BASH_FUNC_port_used%%': '() {  local port="${1#*:}";\n' +
      ' local host=$((expr "${1}" : \'\\(.*\\):\' || echo "localhost") | awk \'END{print $NF}\');\n' +
      ' local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n' +
      ' for strategy in ${port_strategies[@]};\n' +
      ' do\n' +
      ' $strategy $host $port;\n' +
      ' status=$?;\n' +
      ' if [[ "$status" == "0" ]] || [[ "$status" == "1" ]]; then\n' +
      ' return $status;\n' +
      ' fi;\n' +
      ' done;\n' +
      ' return 127\n' +
      '}',
    'BASH_FUNC_source_helpers%%': '() {  function random_number () \n' +
      ' { \n' +
      ' shuf -i ${1}-${2} -n 1\n' +
      ' };\n' +
      ' export -f random_number;\n' +
      ' function port_used_python () \n' +
      ' { \n' +
      ` python -c "import socket; socket.socket().connect(('$1',$2))" > /dev/null 2>&1\n` +
      ' };\n' +
      ' function port_used_python3 () \n' +
      ' { \n' +
      ` python3 -c "import socket; socket.socket().connect(('$1',$2))" > /dev/null 2>&1\n` +
      ' };\n' +
      ' function port_used_nc () \n' +
      ' { \n' +
      ' nc -w 2 "$1" "$2" < /dev/null > /dev/null 2>&1\n' +
      ' };\n' +
      ' function port_used_lsof () \n' +
      ' { \n' +
      ' lsof -i :"$2" > /dev/null 2>&1\n' +
      ' };\n' +
      ' function port_used_bash () \n' +
      ' { \n' +
      ' local bash_supported=$(strings /bin/bash 2>/dev/null | grep tcp);\n' +
      ' if [ "$bash_supported" == "/dev/tcp/*/*" ]; then\n' +
      ' ( : < /dev/tcp/$1/$2 ) > /dev/null 2>&1;\n' +
      ' else\n' +
      ' return 127;\n' +
      ' fi\n' +
      ' };\n' +
      ' function port_used () \n' +
      ' { \n' +
      ' local port="${1#*:}";\n' +
      ' local host=$((expr "${1}" : \'\\(.*\\):\' || echo "localhost") | awk \'END{print $NF}\');\n' +
      ' local port_strategies=(port_used_nc port_used_lsof port_used_bash port_used_python port_used_python3);\n' +
      ' for strategy in ${port_strategies[@]};\n' +
      ' do\n' +
      ' $strategy $host $port;\n' +
      ' status=$?;\n' +
      ' if [[ "$status" == "0" ]] || [[ "$status" == "1" ]]; then\n' +
      ' return $status;\n' +
      ' fi;\n' +
      ' done;\n' +
      ' return 127\n' +
      ' };\n' +
      ' export -f port_used;\n' +
      ' function find_port () \n' +
      ' { \n' +
      ' local host="${1:-localhost}";\n' +
      ' local min_port=${2:-2000};\n' +
      ' local max_port=${3:-65535};\n' +
      ' local port_range=($(shuf -i ${min_port}-${max_port}));\n' +
      ' local retries=1;\n' +
      ' for ((attempt=0; attempt<=$retries; attempt++))\n' +
      ' do\n' +
      ' for port in "${port_range[@]}";\n' +
      ' do\n' +
      ' if port_used "${host}:${port}"; then\n' +
      ' continue;\n' +
      ' fi;\n' +
      ' echo "${port}";\n' +
      ' return 0;\n' +
      ' done;\n' +
      ' done;\n' +
      ' echo "error: failed to find available port in range ${min_port}..${max_port}" 1>&2;\n' +
      ' return 1\n' +
      ' };\n' +
      ' export -f find_port;\n' +
      ' function wait_until_port_used () \n' +
      ' { \n' +
      ' local port="${1}";\n' +
      ' local time="${2:-30}";\n' +
      ' for ((i=1; i<=time*2; i++))\n' +
      ' do\n' +
      ' port_used "${port}";\n' +
      ' port_status=$?;\n' +
      ' if [ "$port_status" == "0" ]; then\n' +
      ' return 0;\n' +
      ' else\n' +
      ' if [ "$port_status" == "127" ]; then\n' +
      ' echo "commands to find port were either not found or inaccessible.";\n' +
      ` echo "command options are lsof, nc, bash's /dev/tcp, or python (or python3) with socket lib.";\n` +
      ' return 127;\n' +
      ' fi;\n' +
      ' fi;\n' +
      ' sleep 0.5;\n' +
      ' done;\n' +
      ' return 1\n' +
      ' };\n' +
      ' export -f wait_until_port_used;\n' +
      ' function create_passwd () \n' +
      ' { \n' +
      " tr -cd 'a-zA-Z0-9' < /dev/urandom 2> /dev/null | head -c${1:-8}\n" +
      ' };\n' +
      ' export -f create_passwd\n' +
      '}',
    LOG_LEVEL: 'debug',
    NODE_EXEC_PATH: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    FAMILY: 'almalinux',
    LS_COLORS: '',
    SSI_VERSION: '9.4',
    PS1: '(base) \\[\\e[32m\\]\\u@\\h  \\[\\e[34;1m\\]\\w $\\[\\e[0m\\] ',
    _: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    VSCODE_PROXY_URI: 'https://dcc-ondemand-01.oit.duke.edu/rnode/dcc-core-08/57472/proxy/{{port}}/',
    BROWSER: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/bin/helpers/browser.sh',
    PYTHONSTARTUP: '/hpc/home/ajj54/.local/share/code-server/extensions/ms-python.python-2024.12.3-universal/python_files/pythonrc.py',
    TERM_PROGRAM: 'vscode',
    TERM_PROGRAM_VERSION: '1.90.1',
    COLORTERM: 'truecolor',
    GIT_ASKPASS: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/extensions/git/dist/askpass.sh',
    VSCODE_GIT_ASKPASS_NODE: '/admin/apps/rhel9/code-server-4.90.2/lib/node',
    VSCODE_GIT_ASKPASS_EXTRA_ARGS: '',
    VSCODE_GIT_ASKPASS_MAIN: '/admin/apps/rhel9/code-server-4.90.2/lib/vscode/extensions/git/dist/askpass-main.js',
    VSCODE_GIT_IPC_HANDLE: '/tmp/vscode-git-0892b29a11.sock'
  }
}
[2024-08-29T11:30:33.302Z] debug 2 active connections
[2024-08-29T11:30:33.302Z] debug heartbeat
[2024-08-29T11:31:33.303Z] debug 2 active connections
[2024-08-29T11:31:33.303Z] debug heartbeat
[2024-08-29T11:32:33.306Z] debug 2 active connections
[2024-08-29T11:32:33.306Z] debug heartbeat
slurmstepd: error: *** JOB 15179672 ON dcc-core-08 CANCELLED AT 2024-08-29T07:33:09 ***
